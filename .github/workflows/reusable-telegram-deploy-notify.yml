name: Reusable Telegram Deploy Notify

on:
  workflow_call:
    inputs:
      project-name:
        required: true
        type: string
      should-deploy:
        required: true
        type: string
      statuses-text:
        required: true
        type: string
      new-tag:
        required: true
        type: string
      is-success:
        required: true
        type: string
    secrets:
      TELEGRAM_CHAT_ID:
        required: true
      TELEGRAM_BOT_TOKEN:
        required: true

jobs:
  notify:
    runs-on: ubuntu-latest
    # run only if deploy was intended
    if: ${{ inputs.should-deploy == 'true' }}
    steps:
      - name: Notify Telegram Success
        if: ${{ inputs.is-success == 'true' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: html
          message: |
            üöÄ <b>${{ inputs.project-name }}</b>

            ‚úÖ Deploy succeeded
            Tag <code>${{ inputs.new-tag }}</code> deployed

            ${{ inputs.statuses-text }}

            üëâ <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">View run</a>

      - name: Notify Telegram Failure
        if: ${{ inputs.is-success != 'true' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: html
          message: |
            üö® <b>${{ inputs.project-name }}</b>

            ‚ùå Build/Deploy failed

            ‚Ä¢ Repository: ${{ github.repository }}
            ‚Ä¢ Workflow:   ${{ github.workflow }}
            ‚Ä¢ Event:      ${{ github.event_name }}
            ‚Ä¢ Commit:     ${{ github.sha }}
            ‚Ä¢ Actor:      ${{ github.actor }}

            ${{ inputs.statuses-text }}

            üëâ <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">View run</a>