name: Reusable Telegram Deploy Notify

on:
  workflow_call:
    inputs:
      should-deploy:
        required: true
        type: string
      ci-result:
        required: true
        type: string
      tag-result:
        required: true
        type: string
      deploy-result:   # —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ: Fly, Vercel, Netlify –∏ —Ç.–¥.
        required: true
        type: string
      new-tag:
        required: true
        type: string

jobs:
  notify:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Telegram Success
        if: ${{ inputs.should-deploy == 'true' && inputs.deploy-result == 'success' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ‚úÖ Deploy succeeded
            Tag `${{ inputs.new-tag }}` deployed
            üëâ [View run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Notify Telegram Failure
        if: ${{ inputs.ci-result == 'failure' || inputs.tag-result == 'failure' || inputs.deploy-result == 'failure' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ‚ùå Build/Deploy failed

            ‚Ä¢ Repository: ${{ github.repository }}
            ‚Ä¢ Workflow: ${{ github.workflow }}
            ‚Ä¢ Event: ${{ github.event_name }}
            ‚Ä¢ Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            ‚Ä¢ Triggered by: ${{ github.actor }}

            Job statuses:
            ‚Ä¢ CI-checks: ${{ inputs.ci-result }}
            ‚Ä¢ Tag-release: ${{ inputs.tag-result }}
            ‚Ä¢ Deploy: ${{ inputs.deploy-result }}

            üëâ [View run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})