name: CI/CD Pipeline for back-end part of Part 7 of FSO Course - Project BlogApp

on:
  push:
    branches: [main]
    paths:
      - 'Part-7/blog/backend/**'
  pull_request:
    branches: [main]
    paths:
      - 'Part-7/blog/backend/**'
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      audit_needed: ${{ steps.check.outputs.audit_needed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if dependencies changed
        id: check
        run: |
          # Paths to backend dependency files
          PKG_JSON="Part-7/blog/backend/package.json"
          PKG_LOCK="Part-7/blog/backend/package-lock.json"

          # Check if this is not the first commit
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            if git diff --ignore-space-change --ignore-all-space --ignore-blank-lines --quiet HEAD^ HEAD -- "$PKG_JSON" "$PKG_LOCK"; then
              echo "audit_needed=false" >> $GITHUB_OUTPUT
            else
              echo "audit_needed=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "First commit in branch â†’ force audit"
            echo "audit_needed=true" >> $GITHUB_OUTPUT
          fi

  ci-checks:
    needs: changes
    uses: ./.github/workflows/reusable-express-backend-ci.yml
    with:
      working-directory: Part-7/blog/backend
      node-versions: '["18","22"]'
      audit-needed: ${{ needs.changes.outputs.audit_needed }}
    secrets:
      DEV_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
      MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
      SECRET: sekret
      TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
      TEST_SECRET: sekret

  tag-generate:
    needs: ci-checks
    uses: ./.github/workflows/reusable-tag-generate.yml
    with:
      should-deploy: ${{ needs.ci-checks.outputs.should_deploy }}
      tag-prefix: blogapp-backend-

  fly-deploy:
    needs: [ci-checks, tag-generate]
    uses: ./.github/workflows/reusable-fly-deploy.yml
    with:
      should-deploy: ${{ needs.ci-checks.outputs.should_deploy }}
      working-directory: Part-7/blog/backend
      image-label: ${{ needs['tag-generate'].outputs.new_tag }}
    secrets:
      FLY_API_TOKEN: ${{ secrets.FLY_FSO_BLOGAPP_TOKEN }}

  tag-push:
    needs: fly-deploy
    uses: ./.github/workflows/reusable-tag-push.yml
    with:
      should-deploy: ${{ needs.ci-checks.outputs.should_deploy }}
      tag-to-push: ${{ needs['tag-generate'].outputs.new_tag }}

  health-check:
    needs: fly-deploy
    uses: ./.github/workflows/reusable-health-check.yml
    with:
      url: https://blogs-fso.fly.dev/ready

  notify:
    needs: [ci-checks, tag-generate, tag-push, fly-deploy, health-check]
    uses: ./.github/workflows/reusable-telegram-deploy-notify.yml
    with:
      should-deploy: ${{ needs.ci-checks.outputs.should_deploy }}
      ci-result: ${{ needs.ci-checks.result }}
      tag-result: ${{ needs.tag-push.result }}
      deploy-result: ${{ needs.health-check.result }}
      new-tag: ${{ needs['tag-generate'].outputs.new_tag }}