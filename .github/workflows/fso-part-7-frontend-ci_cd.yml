name: CI/CD Pipeline for front-end part of Part 7 of FSO Course - Project BlogApp

on:
  push:
    branches: [main]
    paths:
      - 'Part-7/blog/frontend/blog_redux/**'
      - 'Part-7/blog/frontend/blog_query/**'
  pull_request:
    branches: [main]
    paths:
      - 'Part-7/blog/frontend/blog_redux/**'
      - 'Part-7/blog/frontend/blog_query/**'
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      blog_redux: ${{ steps.filter.outputs.blog_redux }}
      blog_query: ${{ steps.filter.outputs.blog_query }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            blog_redux:
              - 'Part-7/blog/frontend/blog_redux/**'
            blog_query:
              - 'Part-7/blog/frontend/blog_query/**'

  blog_redux:
    needs: changes
    if: needs.changes.outputs.blog_redux == 'true'
    name: Frontend CI - blog_redux
    uses: ./.github/workflows/reusable-frontend-ci.yml
    with:
      app_slug: blog_redux
      working_directory: Part-7/blog/frontend/blog_redux
      backend_directory: Part-7/blog/backend
      backend_node_version: '22'
      backend_port: 3003
      backend_health_path: /health
      backend_timeout_ms: 120000
      frontend_node_version: '22'
      e2e_library: playwright
      frontend_port: 5173
      frontend_url: 'http://127.0.0.1:5173'
      frontend_timeout_ms: 120000
      e2e_artifact_paths: |
        Part-7/blog/frontend/blog_redux/playwright-report/**
        Part-7/blog/frontend/blog_redux/test-results/**
      extra_files: vercel.json
    secrets:
      TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI_REDUX }}

  tag-generate-redux:
    needs: blog_redux
    uses: ./.github/workflows/reusable-tag-generate.yml
    with:
      should-deploy: ${{ needs.blog_redux.outputs.should_deploy }}
      tag-prefix: blogapp-redux-

  vercel-deploy-redux:
    needs: [blog_redux, tag-generate-redux]
    if: needs.blog_redux.outputs.should_deploy == 'true'
    uses: ./.github/workflows/reusable-vercel-deploy.yml
    with:
      should-deploy: ${{ needs.blog_redux.outputs.should_deploy }}
      artifact-name: blog_redux-dist
      app_slug: blog_redux
      image-label: ${{ needs['tag-generate-redux'].outputs.new_tag }}
    secrets:
      FSO_VERCEL_TOKEN: ${{ secrets.FSO_VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      # VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_REDUX }}
      VERCEL_PROJECT_ID: 'prj_6XKuTqUP8rcBnr41JApKSyF8ngxA'

  tag-push-redux:
    needs: vercel-deploy-redux
    if: needs.blog_redux.outputs.should_deploy == 'true' && needs['vercel-deploy-redux'].result == 'success'
    uses: ./.github/workflows/reusable-tag-push.yml
    with:
      should-deploy: ${{ needs.blog_redux.outputs.should_deploy }}
      tag-to-push: ${{ needs['tag-generate-redux'].outputs.new_tag }}

  notify-redux:
    if: ${{ always() }}
    needs: [blog_redux, tag-generate-redux, vercel-deploy-redux, tag-push-redux]
    uses: ./.github/workflows/reusable-telegram-deploy-notify.yml
    with:
      should-deploy: ${{ needs.blog_redux.outputs.should_deploy }}
      ci-result:     ${{ needs.blog_redux.result }}
      tag-result:    ${{ needs['tag-push-redux'].result }}
      deploy-result: ${{ needs['vercel-deploy-redux'].result }}
      new-tag:       ${{ needs['tag-generate-redux'].outputs.new_tag }}

  blog_query:
    needs: changes
    if: needs.changes.outputs.blog_query == 'true'
    name: Frontend CI - blog_query
    uses: ./.github/workflows/reusable-frontend-ci.yml
    with:
      app_slug: blog_query
      working_directory: Part-7/blog/frontend/blog_query
      backend_directory: Part-7/blog/backend
      backend_node_version: '22'
      backend_port: 3003
      backend_health_path: /health
      backend_timeout_ms: 120000
      frontend_node_version: '20'
      e2e_library: cypress
      frontend_port: 5173
      frontend_url: 'http://127.0.0.1:5173'
      frontend_timeout_ms: 120000
      e2e_artifact_paths: |
        Part-7/blog/frontend/blog_query/cypress/reports/**
        Part-7/blog/frontend/blog_query/cypress/screenshots/**
        Part-7/blog/frontend/blog_query/cypress/videos/**
      extra_files: vercel.json
    secrets:
      TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI_QUERY }}

  tag-generate-query:
    needs: blog_query
    uses: ./.github/workflows/reusable-tag-generate.yml
    with:
      should-deploy: ${{ needs.blog_query.outputs.should_deploy }}
      tag-prefix: blogapp-query-

  vercel-deploy-query:
    needs: [blog_query, tag-generate-query]
    if: needs.blog_query.outputs.should_deploy == 'true'
    uses: ./.github/workflows/reusable-vercel-deploy.yml
    with:
      should-deploy: ${{ needs.blog_query.outputs.should_deploy }}
      artifact-name: blog_query-dist
      app_slug: blog_query
      image-label: ${{ needs['tag-generate-query'].outputs.new_tag }}
    secrets:
      FSO_VERCEL_TOKEN: ${{ secrets.FSO_VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      # VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_QUERY }}
      VERCEL_PROJECT_ID: 'prj_9bFR1EaMi0KqD54nxHnonOxGAzGb'

  tag-push-query:
    needs: vercel-deploy-query
    if: needs.blog_query.outputs.should_deploy == 'true' && needs['vercel-deploy-query'].result == 'success'
    uses: ./.github/workflows/reusable-tag-push.yml
    with:
      should-deploy: ${{ needs.blog_query.outputs.should_deploy }}
      tag-to-push: ${{ needs['tag-generate-query'].outputs.new_tag }}

  notify-query:
    if: ${{ always() }}
    needs: [blog_query, tag-generate-query, vercel-deploy-query, tag-push-query]
    uses: ./.github/workflows/reusable-telegram-deploy-notify.yml
    with:
      should-deploy: ${{ needs.blog_query.outputs.should_deploy }}
      ci-result:     ${{ needs.blog_query.result }}
      tag-result:    ${{ needs['tag-push-query'].result }}
      deploy-result: ${{ needs['vercel-deploy-query'].result }}
      new-tag:       ${{ needs['tag-generate-query'].outputs.new_tag }}