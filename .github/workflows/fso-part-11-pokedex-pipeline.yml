name: CI/CD Pipeline For Part 11 of FSO Course Task pokedex

on: 
  push:
    branches:
      - main
    paths:
      - 'Part-11/full-stack-open-pokedex/**'
      - '.github/workflows/fso-part-11-pokedex-pipeline.yml'
  pull_request:
    branches: [main]
    types: [opened, synchronize]
    paths:
      - 'Part-11/full-stack-open-pokedex/**'
      - '.github/workflows/fso-part-11-pokedex-pipeline.yml'
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      pokedex: ${{ steps.filter.outputs.pokedex }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            pokedex:
              - 'Part-11/full-stack-open-pokedex/**'
              - '.github/workflows/fso-part-11-pokedex-pipeline.yml'

  CI-checks:
    needs: changes
    if: ${{ needs.changes.outputs.pokedex == 'true' }}
    runs-on: ubuntu-latest

    outputs:
      should_deploy: ${{ steps.gate.outputs.should_deploy }}

    defaults:
      run:
        working-directory: Part-11/full-stack-open-pokedex

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Part-11/full-stack-open-pokedex/package-lock.json
      - name: Install dependencies 
        run: npm ci  

      - name: Check style
        run: npm run eslint

      - name: Build
        run: npm run build

      - name: Test
        run: npm test -- --ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: e2e tests
        run: npm run test:e2e

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: Part-11/full-stack-open-pokedex/playwright-report/
          retention-days: 30

      - name: Decide if should deploy
        id: gate
        run: echo "should_deploy=${{ github.event_name == 'push'
          && !contains(toJSON(github.event.commits.*.message), '#skip')
          && !contains(github.event.head_commit.message || '', '#skip') }}" >> $GITHUB_OUTPUT

  tag_release:
    # We create a git tag before deploy 
    # so that the deployed version is always in sync with git history.
    runs-on: ubuntu-latest
    needs: [CI-checks]
    if: ${{ needs.CI-checks.outputs.should_deploy == 'true' }}
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@e528bc2b9628971ce0e6f823f3052d1dcd9d512c
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true
          CUSTOM_TAG: pokedex-v

  deploy:
    runs-on: ubuntu-latest
    needs: [tag_release]
    if: ${{ needs.CI-checks.outputs.should_deploy == 'true' }}

    defaults:
      run:
        working-directory: Part-11/full-stack-open-pokedex

    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only --image-label ${{ needs.tag_release.outputs.new_tag }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: [changes, CI-checks, tag_release, deploy]
    if: always()

    steps:
      - name: Notify success
        if: ${{ needs.changes.outputs.pokedex == 'true' && needs.CI-checks.outputs.should_deploy == 'true' && needs.deploy.result == 'success' }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: success
          nodetail: true
          title: "✅ Deploy succeeded"
          description: |
            Tag `${{ needs.tag_release.outputs.new_tag }}` deployed
            [View run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Notify failure
        if: ${{ needs.changes.outputs.pokedex == 'true' && (needs.CI-checks.result == 'failure' || needs.tag_release.result == 'failure' || needs.deploy.result == 'failure') }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: failure
          title: "❌ Build/Deploy failed"
          description: |
            Job statuses:
            • CI-checks: ${{ needs.CI-checks.result }}
            • tag_release: ${{ needs.tag_release.result }}
            • deploy: ${{ needs.deploy.result }}


      
